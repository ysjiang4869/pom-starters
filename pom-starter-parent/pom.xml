<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>pom-starters</artifactId>
        <groupId>org.jys.foundation</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <modules>
        <module>../pom-starter-web</module>
    </modules>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>pom-starter-parent</artifactId>
    <packaging>pom</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <!-- Please order by alphabetic order -->
        <commons-codec.version>1.10</commons-codec.version>
        <commons-csv.version>1.4</commons-csv.version>
        <commons-fileupload.version>1.3.3</commons-fileupload.version>
        <commons-io.version>2.5</commons-io.version>
        <commons-lang3.version>3.5</commons-lang3.version>
        <common-tools.version>1.0-SNAPSHOT</common-tools.version>
        <ehcache.version>2.6.11</ehcache.version>
        <graphql.version>2.3.0</graphql.version>
        <groovy.version>2.4.7</groovy.version>
        <gson.version>2.7</gson.version>
        <hazelcast.version>3.11</hazelcast.version>
        <hibernate-core.version>5.2.6.Final</hibernate-core.version>
        <hibernate-validator.version>6.1.6.Final</hibernate-validator.version>
        <jackson.version>2.8.10</jackson.version>
        <javax.mail.version>1.5.5</javax.mail.version>
        <jooq.version>3.9.1</jooq.version>
        <jsonwebtoken.version>0.6.0</jsonwebtoken.version>
        <jsoup.version>1.10.2</jsoup.version>
        <kaptcha.version>0.0.9</kaptcha.version>
        <maven-complier-plugin.version>3.7.0</maven-complier-plugin.version>
        <maven-dependency-plugin.version>2.1.0</maven-dependency-plugin.version>
        <mongodb.version>3.2.2</mongodb.version>
        <node-client.version>0.1.0</node-client.version>
        <poi-ooxml.version>3.16</poi-ooxml.version>
        <postgres.version>9.1-901.jdbc4</postgres.version>
        <retrofit.version>2.5.0</retrofit.version>
        <springfox.version>2.7.0</springfox.version>
        <springloaded.version>1.2.6.RELEASE</springloaded.version>
        <spring-boot.version>1.5.9.RELEASE</spring-boot.version>
        <spring-kafka.version>1.2.2.RELEASE</spring-kafka.version>
        <spring-security.version>4.2.3.RELEASE</spring-security.version>
        <sqlite-jdbc.version>3.16.1</sqlite-jdbc.version>
        <thumbnailator.version>[0.4, 0.5)</thumbnailator.version>
        <vertx.version>3.5.4</vertx.version>
        <weixin-java-mp.version>2.4.0</weixin-java-mp.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!--<dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>-->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>${commons-fileupload.version}</version>
            </dependency>

            <dependency>
                <groupId>org.opencenter.client</groupId>
                <artifactId>libopencli-node</artifactId>
                <version>${node-client.version}</version>
            </dependency>

            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${springfox.version}</version>
            </dependency>

            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jsonwebtoken.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.axet</groupId>
                <artifactId>kaptcha</artifactId>
                <version>${kaptcha.version}</version>
            </dependency>

            <dependency>
                <groupId>com.hazelcast</groupId>
                <artifactId>hazelcast</artifactId>
                <version>${hazelcast.version}</version>
            </dependency>

            <dependency>
                <groupId>postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgres.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jooq</groupId>
                <artifactId>jooq</artifactId>
                <version>${jooq.version}</version>
            </dependency>

            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy</artifactId>
                <version>${groovy.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>${jsoup.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml -->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${poi-ooxml.version}</version>
            </dependency>

            <dependency>
                <groupId>org.xerial</groupId>
                <artifactId>sqlite-jdbc</artifactId>
                <version>${sqlite-jdbc.version}</version>
            </dependency>

            <dependency>
                <groupId>net.sf.ehcache</groupId>
                <artifactId>ehcache-core</artifactId>
                <version>${ehcache.version}</version>
            </dependency>

            <dependency>
                <groupId>net.coobird</groupId>
                <artifactId>thumbnailator</artifactId>
                <version>${thumbnailator.version}</version>
            </dependency>

            <dependency>
                <groupId>com.graphql-java</groupId>
                <artifactId>graphql-java</artifactId>
                <version>${graphql.version}</version>
            </dependency>

            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-core</artifactId>
                <version>${vertx.version}</version>
            </dependency>

            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-web</artifactId>
                <version>${vertx.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-csv -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-csv</artifactId>
                <version>${commons-csv.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka</artifactId>
                <version>${spring-kafka.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.binarywang</groupId>
                <artifactId>weixin-java-mp</artifactId>
                <version>${weixin-java-mp.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>

            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate-core.version}</version>
            </dependency>

            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator.version}</version>
            </dependency>

            <dependency>
                <groupId>com.sun.mail</groupId>
                <artifactId>javax.mail</artifactId>
                <version>${javax.mail.version}</version>
            </dependency>

            <dependency>
                <groupId>com.squareup.retrofit2</groupId>
                <artifactId>retrofit</artifactId>
                <version>${retrofit.version}</version>
            </dependency>

            <dependency>
                <groupId>com.squareup.retrofit2</groupId>
                <artifactId>converter-jackson</artifactId>
                <version>${retrofit.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jys.foundation</groupId>
                <artifactId>common-tools</artifactId>
                <version>${common-tools.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <!--Refer to spring boot document, using for packing executable jar file, cmd:mvn package-->
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                    <dependencies>
                        <!-- spring热部署-->
                        <dependency>
                            <groupId>org.springframework</groupId>
                            <artifactId>springloaded</artifactId>
                            <version>${springloaded.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <!--using for configure -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-complier-plugin.version}</version>
                    <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
                </plugin>
                <!-- jooq codegen example-->
                <plugin>
                    <!-- Specify the maven code generator plugin -->
                    <!-- Use org.jooq for the Open Source Edition
                    org.jooq.pro for commercial editions,
                    org.jooq.pro-java-6 for commercial editions with Java 6 support,
                    org.jooq.trial for the free trial edition
                    Note: Only the Open Source Edition is hosted on Maven Central.
                    Import the others manually from your distribution -->
                    <groupId>org.jooq</groupId>
                    <artifactId>jooq-codegen-maven</artifactId>
                    <version>${jooq.version}</version>
                    <!-- The plugin should hook into the generate goal -->
                    <executions>
                        <execution>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                        </execution>
                    </executions>
                    <!-- Manage the plugin's dependency. In this example, we'll use a PostgreSQL database -->
                    <dependencies>
                        <dependency>
                            <groupId>postgresql</groupId>
                            <artifactId>postgresql</artifactId>
                            <version>${postgres.version}</version>
                        </dependency>
                    </dependencies>
                    <!-- Specify the plugin configuration.
                    The configuration format is the same as for the standalone code generator -->
                    <configuration>
                        <!-- JDBC connection parameters -->
                        <jdbc>
                            <driver>org.postgresql.Driver</driver>
                            <!--<url>jdbc:postgresql://localhost:5432/node?useUnicode=true&amp;characterEncoding=UTF-8</url>-->
                            <user>postgres</user>
                            <password>root</password>
                        </jdbc>
                        <!-- Generator parameters -->
                        <generator>
                            <database>
                                <name>org.jooq.util.postgres.PostgresDatabase</name>
                                <includes>.*</includes>
                                <!-- <excludes></excludes>-->
                                <!-- In case your database supports catalogs, e.g. SQL Server:
                                <inputCatalog>public</inputCatalog>
                                -->
                                <inputSchema>public</inputSchema>
                            </database>
                            <target>
                                <!--<packageName>org.opencenter.service.node.init</packageName>-->
                                <directory>target/generated-sources/jooq</directory>
                            </target>
                        </generator>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>
